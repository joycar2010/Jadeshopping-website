name: 备份清理

on:
  schedule:
    # 每周日凌晨 1:00 UTC 执行清理
    - cron: '0 1 * * 0'
  workflow_dispatch:

jobs:
  cleanup-old-backups:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 清理旧备份分支
      run: |
        echo "开始清理旧备份分支..."
        
        # 获取所有远程备份分支
        git fetch origin
        
        # 设置保留天数 (默认保留 30 天)
        RETENTION_DAYS=30
        CUTOFF_DATE=$(date -d "$RETENTION_DAYS days ago" +%Y-%m-%d)
        
        echo "保留天数: $RETENTION_DAYS"
        echo "截止日期: $CUTOFF_DATE"
        
        # 查找并删除过期的备份分支
        DELETED_COUNT=0
        for branch in $(git branch -r | grep 'origin/backup-' | sed 's/origin\///'); do
          # 提取分支日期
          branch_date=$(echo $branch | sed 's/backup-//')
          
          # 验证日期格式
          if [[ $branch_date =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
            # 比较日期
            if [[ "$branch_date" < "$CUTOFF_DATE" ]]; then
              echo "删除过期备份分支: $branch (日期: $branch_date)"
              git push origin --delete $branch || echo "无法删除分支 $branch"
              DELETED_COUNT=$((DELETED_COUNT + 1))
            else
              echo "保留备份分支: $branch (日期: $branch_date)"
            fi
          else
            echo "跳过无效分支名: $branch"
          fi
        done
        
        echo "清理完成，共删除 $DELETED_COUNT 个过期备份分支"
        
    - name: 清理旧的工作流运行记录
      run: |
        echo "开始清理旧的工作流运行记录..."
        
        # 保留最近 50 次运行记录
        KEEP_RUNS=50
        
        # 获取备份工作流的运行记录
        WORKFLOW_ID=$(gh api repos/${{ github.repository }}/actions/workflows --jq '.workflows[] | select(.name=="自动备份") | .id')
        
        if [ -n "$WORKFLOW_ID" ]; then
          # 获取所有运行记录
          RUNS=$(gh api repos/${{ github.repository }}/actions/workflows/$WORKFLOW_ID/runs --paginate --jq '.workflow_runs[].id')
          
          # 跳过最近的运行记录，删除其余的
          echo "$RUNS" | tail -n +$((KEEP_RUNS + 1)) | while read run_id; do
            if [ -n "$run_id" ]; then
              echo "删除工作流运行记录: $run_id"
              gh api repos/${{ github.repository }}/actions/runs/$run_id -X DELETE || echo "无法删除运行记录 $run_id"
            fi
          done
        fi
        
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 生成清理报告
      run: |
        echo "# 备份清理报告" > cleanup-report.md
        echo "清理时间: $(date)" >> cleanup-report.md
        echo "" >> cleanup-report.md
        
        # 统计当前备份分支
        CURRENT_BRANCHES=$(git ls-remote --heads origin | grep backup- | wc -l)
        echo "## 清理后状态" >> cleanup-report.md
        echo "- 当前备份分支数量: $CURRENT_BRANCHES" >> cleanup-report.md
        
        # 列出保留的备份分支
        echo "" >> cleanup-report.md
        echo "## 保留的备份分支" >> cleanup-report.md
        git ls-remote --heads origin | grep backup- | sed 's/.*backup-/- backup-/' >> cleanup-report.md
        
        echo "" >> cleanup-report.md
        echo "## 清理策略" >> cleanup-report.md
        echo "- 备份分支保留期: 30 天" >> cleanup-report.md
        echo "- 工作流记录保留: 最近 50 次" >> cleanup-report.md
        
    - name: 上传清理报告
      uses: actions/upload-artifact@v4
      with:
        name: backup-cleanup-report-${{ github.run_number }}
        path: cleanup-report.md
        retention-days: 90